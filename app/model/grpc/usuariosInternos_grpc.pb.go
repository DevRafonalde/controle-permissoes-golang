// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.2
// source: usuariosInternos.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	UsuariosInternos_FindAllUsuariosInternos_FullMethodName    = "/grpc.UsuariosInternos/FindAllUsuariosInternos"
	UsuariosInternos_FindUsuarioInternoById_FullMethodName     = "/grpc.UsuariosInternos/FindUsuarioInternoById"
	UsuariosInternos_GetPerfisVinculados_FullMethodName        = "/grpc.UsuariosInternos/GetPerfisVinculados"
	UsuariosInternos_CreateUsuarioInterno_FullMethodName       = "/grpc.UsuariosInternos/CreateUsuarioInterno"
	UsuariosInternos_CloneUsuarioInterno_FullMethodName        = "/grpc.UsuariosInternos/CloneUsuarioInterno"
	UsuariosInternos_UpdateUsuarioInterno_FullMethodName       = "/grpc.UsuariosInternos/UpdateUsuarioInterno"
	UsuariosInternos_AlterarSenhaAdmin_FullMethodName          = "/grpc.UsuariosInternos/AlterarSenhaAdmin"
	UsuariosInternos_AlterarSenhaUsuarioInterno_FullMethodName = "/grpc.UsuariosInternos/AlterarSenhaUsuarioInterno"
	UsuariosInternos_RestaurarUsuarioInterno_FullMethodName    = "/grpc.UsuariosInternos/RestaurarUsuarioInterno"
	UsuariosInternos_DesativarUsuarioInterno_FullMethodName    = "/grpc.UsuariosInternos/DesativarUsuarioInterno"
	UsuariosInternos_Login_FullMethodName                      = "/grpc.UsuariosInternos/Login"
	UsuariosInternos_TokenResetSenha_FullMethodName            = "/grpc.UsuariosInternos/TokenResetSenha"
	UsuariosInternos_ResetSenha_FullMethodName                 = "/grpc.UsuariosInternos/ResetSenha"
)

// UsuariosInternosClient is the client API for UsuariosInternos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Definição do serviço
type UsuariosInternosClient interface {
	FindAllUsuariosInternos(ctx context.Context, in *RequestAllPaginado, opts ...grpc.CallOption) (*ListaUsuariosInternos, error)
	FindUsuarioInternoById(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	GetPerfisVinculados(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponsePerfisVinculados, error)
	CreateUsuarioInterno(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	CloneUsuarioInterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	UpdateUsuarioInterno(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	AlterarSenhaAdmin(ctx context.Context, in *RequestAlterarSenhaAdmin, opts ...grpc.CallOption) (*ResponseBool, error)
	AlterarSenhaUsuarioInterno(ctx context.Context, in *RequestAlterarSenhaUsuario, opts ...grpc.CallOption) (*ResponseBool, error)
	RestaurarUsuarioInterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error)
	DesativarUsuarioInterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error)
	Login(ctx context.Context, in *LoginUsuario, opts ...grpc.CallOption) (*RetornoLoginUsuario, error)
	TokenResetSenha(ctx context.Context, in *EmailReset, opts ...grpc.CallOption) (*ResponseTokenResetSenha, error)
	ResetSenha(ctx context.Context, in *ResetSenhaUsuario, opts ...grpc.CallOption) (*ResponseBool, error)
}

type usuariosInternosClient struct {
	cc grpc.ClientConnInterface
}

func NewUsuariosInternosClient(cc grpc.ClientConnInterface) UsuariosInternosClient {
	return &usuariosInternosClient{cc}
}

func (c *usuariosInternosClient) FindAllUsuariosInternos(ctx context.Context, in *RequestAllPaginado, opts ...grpc.CallOption) (*ListaUsuariosInternos, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaUsuariosInternos)
	err := c.cc.Invoke(ctx, UsuariosInternos_FindAllUsuariosInternos_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) FindUsuarioInternoById(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosInternos_FindUsuarioInternoById_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) GetPerfisVinculados(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponsePerfisVinculados, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponsePerfisVinculados)
	err := c.cc.Invoke(ctx, UsuariosInternos_GetPerfisVinculados_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) CreateUsuarioInterno(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosInternos_CreateUsuarioInterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) CloneUsuarioInterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosInternos_CloneUsuarioInterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) UpdateUsuarioInterno(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosInternos_UpdateUsuarioInterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) AlterarSenhaAdmin(ctx context.Context, in *RequestAlterarSenhaAdmin, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, UsuariosInternos_AlterarSenhaAdmin_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) AlterarSenhaUsuarioInterno(ctx context.Context, in *RequestAlterarSenhaUsuario, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, UsuariosInternos_AlterarSenhaUsuarioInterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) RestaurarUsuarioInterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, UsuariosInternos_RestaurarUsuarioInterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) DesativarUsuarioInterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, UsuariosInternos_DesativarUsuarioInterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) Login(ctx context.Context, in *LoginUsuario, opts ...grpc.CallOption) (*RetornoLoginUsuario, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RetornoLoginUsuario)
	err := c.cc.Invoke(ctx, UsuariosInternos_Login_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) TokenResetSenha(ctx context.Context, in *EmailReset, opts ...grpc.CallOption) (*ResponseTokenResetSenha, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseTokenResetSenha)
	err := c.cc.Invoke(ctx, UsuariosInternos_TokenResetSenha_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosInternosClient) ResetSenha(ctx context.Context, in *ResetSenhaUsuario, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, UsuariosInternos_ResetSenha_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsuariosInternosServer is the server API for UsuariosInternos service.
// All implementations must embed UnimplementedUsuariosInternosServer
// for forward compatibility.
//
// Definição do serviço
type UsuariosInternosServer interface {
	FindAllUsuariosInternos(context.Context, *RequestAllPaginado) (*ListaUsuariosInternos, error)
	FindUsuarioInternoById(context.Context, *RequestId) (*UsuarioPerfis, error)
	GetPerfisVinculados(context.Context, *RequestId) (*ResponsePerfisVinculados, error)
	CreateUsuarioInterno(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error)
	CloneUsuarioInterno(context.Context, *RequestId) (*UsuarioPerfis, error)
	UpdateUsuarioInterno(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error)
	AlterarSenhaAdmin(context.Context, *RequestAlterarSenhaAdmin) (*ResponseBool, error)
	AlterarSenhaUsuarioInterno(context.Context, *RequestAlterarSenhaUsuario) (*ResponseBool, error)
	RestaurarUsuarioInterno(context.Context, *RequestId) (*ResponseBool, error)
	DesativarUsuarioInterno(context.Context, *RequestId) (*ResponseBool, error)
	Login(context.Context, *LoginUsuario) (*RetornoLoginUsuario, error)
	TokenResetSenha(context.Context, *EmailReset) (*ResponseTokenResetSenha, error)
	ResetSenha(context.Context, *ResetSenhaUsuario) (*ResponseBool, error)
	mustEmbedUnimplementedUsuariosInternosServer()
}

// UnimplementedUsuariosInternosServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedUsuariosInternosServer struct{}

func (UnimplementedUsuariosInternosServer) FindAllUsuariosInternos(context.Context, *RequestAllPaginado) (*ListaUsuariosInternos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllUsuariosInternos not implemented")
}
func (UnimplementedUsuariosInternosServer) FindUsuarioInternoById(context.Context, *RequestId) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUsuarioInternoById not implemented")
}
func (UnimplementedUsuariosInternosServer) GetPerfisVinculados(context.Context, *RequestId) (*ResponsePerfisVinculados, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPerfisVinculados not implemented")
}
func (UnimplementedUsuariosInternosServer) CreateUsuarioInterno(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUsuarioInterno not implemented")
}
func (UnimplementedUsuariosInternosServer) CloneUsuarioInterno(context.Context, *RequestId) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloneUsuarioInterno not implemented")
}
func (UnimplementedUsuariosInternosServer) UpdateUsuarioInterno(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUsuarioInterno not implemented")
}
func (UnimplementedUsuariosInternosServer) AlterarSenhaAdmin(context.Context, *RequestAlterarSenhaAdmin) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlterarSenhaAdmin not implemented")
}
func (UnimplementedUsuariosInternosServer) AlterarSenhaUsuarioInterno(context.Context, *RequestAlterarSenhaUsuario) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlterarSenhaUsuarioInterno not implemented")
}
func (UnimplementedUsuariosInternosServer) RestaurarUsuarioInterno(context.Context, *RequestId) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestaurarUsuarioInterno not implemented")
}
func (UnimplementedUsuariosInternosServer) DesativarUsuarioInterno(context.Context, *RequestId) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DesativarUsuarioInterno not implemented")
}
func (UnimplementedUsuariosInternosServer) Login(context.Context, *LoginUsuario) (*RetornoLoginUsuario, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedUsuariosInternosServer) TokenResetSenha(context.Context, *EmailReset) (*ResponseTokenResetSenha, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TokenResetSenha not implemented")
}
func (UnimplementedUsuariosInternosServer) ResetSenha(context.Context, *ResetSenhaUsuario) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetSenha not implemented")
}
func (UnimplementedUsuariosInternosServer) mustEmbedUnimplementedUsuariosInternosServer() {}
func (UnimplementedUsuariosInternosServer) testEmbeddedByValue()                          {}

// UnsafeUsuariosInternosServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UsuariosInternosServer will
// result in compilation errors.
type UnsafeUsuariosInternosServer interface {
	mustEmbedUnimplementedUsuariosInternosServer()
}

func RegisterUsuariosInternosServer(s grpc.ServiceRegistrar, srv UsuariosInternosServer) {
	// If the following call pancis, it indicates UnimplementedUsuariosInternosServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&UsuariosInternos_ServiceDesc, srv)
}

func _UsuariosInternos_FindAllUsuariosInternos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAllPaginado)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).FindAllUsuariosInternos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_FindAllUsuariosInternos_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).FindAllUsuariosInternos(ctx, req.(*RequestAllPaginado))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_FindUsuarioInternoById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).FindUsuarioInternoById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_FindUsuarioInternoById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).FindUsuarioInternoById(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_GetPerfisVinculados_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).GetPerfisVinculados(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_GetPerfisVinculados_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).GetPerfisVinculados(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_CreateUsuarioInterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsuarioPerfis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).CreateUsuarioInterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_CreateUsuarioInterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).CreateUsuarioInterno(ctx, req.(*UsuarioPerfis))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_CloneUsuarioInterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).CloneUsuarioInterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_CloneUsuarioInterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).CloneUsuarioInterno(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_UpdateUsuarioInterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsuarioPerfis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).UpdateUsuarioInterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_UpdateUsuarioInterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).UpdateUsuarioInterno(ctx, req.(*UsuarioPerfis))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_AlterarSenhaAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAlterarSenhaAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).AlterarSenhaAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_AlterarSenhaAdmin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).AlterarSenhaAdmin(ctx, req.(*RequestAlterarSenhaAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_AlterarSenhaUsuarioInterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAlterarSenhaUsuario)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).AlterarSenhaUsuarioInterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_AlterarSenhaUsuarioInterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).AlterarSenhaUsuarioInterno(ctx, req.(*RequestAlterarSenhaUsuario))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_RestaurarUsuarioInterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).RestaurarUsuarioInterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_RestaurarUsuarioInterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).RestaurarUsuarioInterno(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_DesativarUsuarioInterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).DesativarUsuarioInterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_DesativarUsuarioInterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).DesativarUsuarioInterno(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUsuario)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_Login_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).Login(ctx, req.(*LoginUsuario))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_TokenResetSenha_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailReset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).TokenResetSenha(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_TokenResetSenha_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).TokenResetSenha(ctx, req.(*EmailReset))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosInternos_ResetSenha_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetSenhaUsuario)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosInternosServer).ResetSenha(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosInternos_ResetSenha_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosInternosServer).ResetSenha(ctx, req.(*ResetSenhaUsuario))
	}
	return interceptor(ctx, in, info, handler)
}

// UsuariosInternos_ServiceDesc is the grpc.ServiceDesc for UsuariosInternos service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UsuariosInternos_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.UsuariosInternos",
	HandlerType: (*UsuariosInternosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindAllUsuariosInternos",
			Handler:    _UsuariosInternos_FindAllUsuariosInternos_Handler,
		},
		{
			MethodName: "FindUsuarioInternoById",
			Handler:    _UsuariosInternos_FindUsuarioInternoById_Handler,
		},
		{
			MethodName: "GetPerfisVinculados",
			Handler:    _UsuariosInternos_GetPerfisVinculados_Handler,
		},
		{
			MethodName: "CreateUsuarioInterno",
			Handler:    _UsuariosInternos_CreateUsuarioInterno_Handler,
		},
		{
			MethodName: "CloneUsuarioInterno",
			Handler:    _UsuariosInternos_CloneUsuarioInterno_Handler,
		},
		{
			MethodName: "UpdateUsuarioInterno",
			Handler:    _UsuariosInternos_UpdateUsuarioInterno_Handler,
		},
		{
			MethodName: "AlterarSenhaAdmin",
			Handler:    _UsuariosInternos_AlterarSenhaAdmin_Handler,
		},
		{
			MethodName: "AlterarSenhaUsuarioInterno",
			Handler:    _UsuariosInternos_AlterarSenhaUsuarioInterno_Handler,
		},
		{
			MethodName: "RestaurarUsuarioInterno",
			Handler:    _UsuariosInternos_RestaurarUsuarioInterno_Handler,
		},
		{
			MethodName: "DesativarUsuarioInterno",
			Handler:    _UsuariosInternos_DesativarUsuarioInterno_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UsuariosInternos_Login_Handler,
		},
		{
			MethodName: "TokenResetSenha",
			Handler:    _UsuariosInternos_TokenResetSenha_Handler,
		},
		{
			MethodName: "ResetSenha",
			Handler:    _UsuariosInternos_ResetSenha_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usuariosInternos.proto",
}
