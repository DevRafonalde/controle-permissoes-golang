// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.2
// source: usuariosExternos.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	UsuariosExternos_FindAllUsuariosExternos_FullMethodName        = "/grpc.UsuariosExternos/FindAllUsuariosExternos"
	UsuariosExternos_FindUsuarioExternoByID_FullMethodName         = "/grpc.UsuariosExternos/FindUsuarioExternoByID"
	UsuariosExternos_FindUsuarioExternoByIDExterno_FullMethodName  = "/grpc.UsuariosExternos/FindUsuarioExternoByIDExterno"
	UsuariosExternos_FindUsuarioExternoByNome_FullMethodName       = "/grpc.UsuariosExternos/FindUsuarioExternoByNome"
	UsuariosExternos_FindUsuarioExternoByDocumento_FullMethodName  = "/grpc.UsuariosExternos/FindUsuarioExternoByDocumento"
	UsuariosExternos_FindUsuarioExternoByCodReserva_FullMethodName = "/grpc.UsuariosExternos/FindUsuarioExternoByCodReserva"
	UsuariosExternos_FindUsuarioExternoByEmail_FullMethodName      = "/grpc.UsuariosExternos/FindUsuarioExternoByEmail"
	UsuariosExternos_CreateUsuarioExterno_FullMethodName           = "/grpc.UsuariosExternos/CreateUsuarioExterno"
	UsuariosExternos_CreateUsuarioExternoTeste_FullMethodName      = "/grpc.UsuariosExternos/CreateUsuarioExternoTeste"
	UsuariosExternos_UpdateUsuarioExterno_FullMethodName           = "/grpc.UsuariosExternos/UpdateUsuarioExterno"
	UsuariosExternos_DesativarUsuarioExterno_FullMethodName        = "/grpc.UsuariosExternos/DesativarUsuarioExterno"
	UsuariosExternos_RestaurarUsuarioExterno_FullMethodName        = "/grpc.UsuariosExternos/RestaurarUsuarioExterno"
	UsuariosExternos_Login_FullMethodName                          = "/grpc.UsuariosExternos/Login"
	UsuariosExternos_TokenResetSenha_FullMethodName                = "/grpc.UsuariosExternos/TokenResetSenha"
	UsuariosExternos_ResetSenha_FullMethodName                     = "/grpc.UsuariosExternos/ResetSenha"
	UsuariosExternos_AlterarSenhaUsuario_FullMethodName            = "/grpc.UsuariosExternos/AlterarSenhaUsuario"
)

// UsuariosExternosClient is the client API for UsuariosExternos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Definição do serviço
type UsuariosExternosClient interface {
	FindAllUsuariosExternos(ctx context.Context, in *RequestAllPaginado, opts ...grpc.CallOption) (*ListaUsuariosExternos, error)
	FindUsuarioExternoByID(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	FindUsuarioExternoByIDExterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	FindUsuarioExternoByNome(ctx context.Context, in *RequestNome, opts ...grpc.CallOption) (*ListaUsuariosExternos, error)
	FindUsuarioExternoByDocumento(ctx context.Context, in *RequestDocumento, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	FindUsuarioExternoByCodReserva(ctx context.Context, in *RequestCodReserva, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	FindUsuarioExternoByEmail(ctx context.Context, in *RequestEmail, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	CreateUsuarioExterno(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	CreateUsuarioExternoTeste(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	UpdateUsuarioExterno(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	DesativarUsuarioExterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error)
	RestaurarUsuarioExterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error)
	Login(ctx context.Context, in *LoginUsuario, opts ...grpc.CallOption) (*UsuarioPerfis, error)
	TokenResetSenha(ctx context.Context, in *EmailReset, opts ...grpc.CallOption) (*ResponseTokenResetSenha, error)
	ResetSenha(ctx context.Context, in *ResetSenhaUsuario, opts ...grpc.CallOption) (*ResponseBool, error)
	AlterarSenhaUsuario(ctx context.Context, in *RequestAlterarSenhaUsuario, opts ...grpc.CallOption) (*ResponseBool, error)
}

type usuariosExternosClient struct {
	cc grpc.ClientConnInterface
}

func NewUsuariosExternosClient(cc grpc.ClientConnInterface) UsuariosExternosClient {
	return &usuariosExternosClient{cc}
}

func (c *usuariosExternosClient) FindAllUsuariosExternos(ctx context.Context, in *RequestAllPaginado, opts ...grpc.CallOption) (*ListaUsuariosExternos, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaUsuariosExternos)
	err := c.cc.Invoke(ctx, UsuariosExternos_FindAllUsuariosExternos_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) FindUsuarioExternoByID(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosExternos_FindUsuarioExternoByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) FindUsuarioExternoByIDExterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosExternos_FindUsuarioExternoByIDExterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) FindUsuarioExternoByNome(ctx context.Context, in *RequestNome, opts ...grpc.CallOption) (*ListaUsuariosExternos, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaUsuariosExternos)
	err := c.cc.Invoke(ctx, UsuariosExternos_FindUsuarioExternoByNome_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) FindUsuarioExternoByDocumento(ctx context.Context, in *RequestDocumento, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosExternos_FindUsuarioExternoByDocumento_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) FindUsuarioExternoByCodReserva(ctx context.Context, in *RequestCodReserva, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosExternos_FindUsuarioExternoByCodReserva_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) FindUsuarioExternoByEmail(ctx context.Context, in *RequestEmail, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosExternos_FindUsuarioExternoByEmail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) CreateUsuarioExterno(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosExternos_CreateUsuarioExterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) CreateUsuarioExternoTeste(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosExternos_CreateUsuarioExternoTeste_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) UpdateUsuarioExterno(ctx context.Context, in *UsuarioPerfis, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosExternos_UpdateUsuarioExterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) DesativarUsuarioExterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, UsuariosExternos_DesativarUsuarioExterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) RestaurarUsuarioExterno(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, UsuariosExternos_RestaurarUsuarioExterno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) Login(ctx context.Context, in *LoginUsuario, opts ...grpc.CallOption) (*UsuarioPerfis, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UsuarioPerfis)
	err := c.cc.Invoke(ctx, UsuariosExternos_Login_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) TokenResetSenha(ctx context.Context, in *EmailReset, opts ...grpc.CallOption) (*ResponseTokenResetSenha, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseTokenResetSenha)
	err := c.cc.Invoke(ctx, UsuariosExternos_TokenResetSenha_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) ResetSenha(ctx context.Context, in *ResetSenhaUsuario, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, UsuariosExternos_ResetSenha_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usuariosExternosClient) AlterarSenhaUsuario(ctx context.Context, in *RequestAlterarSenhaUsuario, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, UsuariosExternos_AlterarSenhaUsuario_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsuariosExternosServer is the server API for UsuariosExternos service.
// All implementations must embed UnimplementedUsuariosExternosServer
// for forward compatibility.
//
// Definição do serviço
type UsuariosExternosServer interface {
	FindAllUsuariosExternos(context.Context, *RequestAllPaginado) (*ListaUsuariosExternos, error)
	FindUsuarioExternoByID(context.Context, *RequestId) (*UsuarioPerfis, error)
	FindUsuarioExternoByIDExterno(context.Context, *RequestId) (*UsuarioPerfis, error)
	FindUsuarioExternoByNome(context.Context, *RequestNome) (*ListaUsuariosExternos, error)
	FindUsuarioExternoByDocumento(context.Context, *RequestDocumento) (*UsuarioPerfis, error)
	FindUsuarioExternoByCodReserva(context.Context, *RequestCodReserva) (*UsuarioPerfis, error)
	FindUsuarioExternoByEmail(context.Context, *RequestEmail) (*UsuarioPerfis, error)
	CreateUsuarioExterno(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error)
	CreateUsuarioExternoTeste(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error)
	UpdateUsuarioExterno(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error)
	DesativarUsuarioExterno(context.Context, *RequestId) (*ResponseBool, error)
	RestaurarUsuarioExterno(context.Context, *RequestId) (*ResponseBool, error)
	Login(context.Context, *LoginUsuario) (*UsuarioPerfis, error)
	TokenResetSenha(context.Context, *EmailReset) (*ResponseTokenResetSenha, error)
	ResetSenha(context.Context, *ResetSenhaUsuario) (*ResponseBool, error)
	AlterarSenhaUsuario(context.Context, *RequestAlterarSenhaUsuario) (*ResponseBool, error)
	mustEmbedUnimplementedUsuariosExternosServer()
}

// UnimplementedUsuariosExternosServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedUsuariosExternosServer struct{}

func (UnimplementedUsuariosExternosServer) FindAllUsuariosExternos(context.Context, *RequestAllPaginado) (*ListaUsuariosExternos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllUsuariosExternos not implemented")
}
func (UnimplementedUsuariosExternosServer) FindUsuarioExternoByID(context.Context, *RequestId) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUsuarioExternoByID not implemented")
}
func (UnimplementedUsuariosExternosServer) FindUsuarioExternoByIDExterno(context.Context, *RequestId) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUsuarioExternoByIDExterno not implemented")
}
func (UnimplementedUsuariosExternosServer) FindUsuarioExternoByNome(context.Context, *RequestNome) (*ListaUsuariosExternos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUsuarioExternoByNome not implemented")
}
func (UnimplementedUsuariosExternosServer) FindUsuarioExternoByDocumento(context.Context, *RequestDocumento) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUsuarioExternoByDocumento not implemented")
}
func (UnimplementedUsuariosExternosServer) FindUsuarioExternoByCodReserva(context.Context, *RequestCodReserva) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUsuarioExternoByCodReserva not implemented")
}
func (UnimplementedUsuariosExternosServer) FindUsuarioExternoByEmail(context.Context, *RequestEmail) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUsuarioExternoByEmail not implemented")
}
func (UnimplementedUsuariosExternosServer) CreateUsuarioExterno(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUsuarioExterno not implemented")
}
func (UnimplementedUsuariosExternosServer) CreateUsuarioExternoTeste(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUsuarioExternoTeste not implemented")
}
func (UnimplementedUsuariosExternosServer) UpdateUsuarioExterno(context.Context, *UsuarioPerfis) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUsuarioExterno not implemented")
}
func (UnimplementedUsuariosExternosServer) DesativarUsuarioExterno(context.Context, *RequestId) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DesativarUsuarioExterno not implemented")
}
func (UnimplementedUsuariosExternosServer) RestaurarUsuarioExterno(context.Context, *RequestId) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestaurarUsuarioExterno not implemented")
}
func (UnimplementedUsuariosExternosServer) Login(context.Context, *LoginUsuario) (*UsuarioPerfis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedUsuariosExternosServer) TokenResetSenha(context.Context, *EmailReset) (*ResponseTokenResetSenha, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TokenResetSenha not implemented")
}
func (UnimplementedUsuariosExternosServer) ResetSenha(context.Context, *ResetSenhaUsuario) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetSenha not implemented")
}
func (UnimplementedUsuariosExternosServer) AlterarSenhaUsuario(context.Context, *RequestAlterarSenhaUsuario) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlterarSenhaUsuario not implemented")
}
func (UnimplementedUsuariosExternosServer) mustEmbedUnimplementedUsuariosExternosServer() {}
func (UnimplementedUsuariosExternosServer) testEmbeddedByValue()                          {}

// UnsafeUsuariosExternosServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UsuariosExternosServer will
// result in compilation errors.
type UnsafeUsuariosExternosServer interface {
	mustEmbedUnimplementedUsuariosExternosServer()
}

func RegisterUsuariosExternosServer(s grpc.ServiceRegistrar, srv UsuariosExternosServer) {
	// If the following call pancis, it indicates UnimplementedUsuariosExternosServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&UsuariosExternos_ServiceDesc, srv)
}

func _UsuariosExternos_FindAllUsuariosExternos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAllPaginado)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).FindAllUsuariosExternos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_FindAllUsuariosExternos_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).FindAllUsuariosExternos(ctx, req.(*RequestAllPaginado))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_FindUsuarioExternoByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_FindUsuarioExternoByID_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByID(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_FindUsuarioExternoByIDExterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByIDExterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_FindUsuarioExternoByIDExterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByIDExterno(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_FindUsuarioExternoByNome_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestNome)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByNome(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_FindUsuarioExternoByNome_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByNome(ctx, req.(*RequestNome))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_FindUsuarioExternoByDocumento_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDocumento)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByDocumento(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_FindUsuarioExternoByDocumento_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByDocumento(ctx, req.(*RequestDocumento))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_FindUsuarioExternoByCodReserva_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCodReserva)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByCodReserva(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_FindUsuarioExternoByCodReserva_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByCodReserva(ctx, req.(*RequestCodReserva))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_FindUsuarioExternoByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_FindUsuarioExternoByEmail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).FindUsuarioExternoByEmail(ctx, req.(*RequestEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_CreateUsuarioExterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsuarioPerfis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).CreateUsuarioExterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_CreateUsuarioExterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).CreateUsuarioExterno(ctx, req.(*UsuarioPerfis))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_CreateUsuarioExternoTeste_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsuarioPerfis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).CreateUsuarioExternoTeste(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_CreateUsuarioExternoTeste_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).CreateUsuarioExternoTeste(ctx, req.(*UsuarioPerfis))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_UpdateUsuarioExterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsuarioPerfis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).UpdateUsuarioExterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_UpdateUsuarioExterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).UpdateUsuarioExterno(ctx, req.(*UsuarioPerfis))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_DesativarUsuarioExterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).DesativarUsuarioExterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_DesativarUsuarioExterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).DesativarUsuarioExterno(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_RestaurarUsuarioExterno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).RestaurarUsuarioExterno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_RestaurarUsuarioExterno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).RestaurarUsuarioExterno(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUsuario)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_Login_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).Login(ctx, req.(*LoginUsuario))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_TokenResetSenha_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailReset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).TokenResetSenha(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_TokenResetSenha_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).TokenResetSenha(ctx, req.(*EmailReset))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_ResetSenha_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetSenhaUsuario)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).ResetSenha(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_ResetSenha_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).ResetSenha(ctx, req.(*ResetSenhaUsuario))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsuariosExternos_AlterarSenhaUsuario_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAlterarSenhaUsuario)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsuariosExternosServer).AlterarSenhaUsuario(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UsuariosExternos_AlterarSenhaUsuario_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsuariosExternosServer).AlterarSenhaUsuario(ctx, req.(*RequestAlterarSenhaUsuario))
	}
	return interceptor(ctx, in, info, handler)
}

// UsuariosExternos_ServiceDesc is the grpc.ServiceDesc for UsuariosExternos service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UsuariosExternos_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.UsuariosExternos",
	HandlerType: (*UsuariosExternosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindAllUsuariosExternos",
			Handler:    _UsuariosExternos_FindAllUsuariosExternos_Handler,
		},
		{
			MethodName: "FindUsuarioExternoByID",
			Handler:    _UsuariosExternos_FindUsuarioExternoByID_Handler,
		},
		{
			MethodName: "FindUsuarioExternoByIDExterno",
			Handler:    _UsuariosExternos_FindUsuarioExternoByIDExterno_Handler,
		},
		{
			MethodName: "FindUsuarioExternoByNome",
			Handler:    _UsuariosExternos_FindUsuarioExternoByNome_Handler,
		},
		{
			MethodName: "FindUsuarioExternoByDocumento",
			Handler:    _UsuariosExternos_FindUsuarioExternoByDocumento_Handler,
		},
		{
			MethodName: "FindUsuarioExternoByCodReserva",
			Handler:    _UsuariosExternos_FindUsuarioExternoByCodReserva_Handler,
		},
		{
			MethodName: "FindUsuarioExternoByEmail",
			Handler:    _UsuariosExternos_FindUsuarioExternoByEmail_Handler,
		},
		{
			MethodName: "CreateUsuarioExterno",
			Handler:    _UsuariosExternos_CreateUsuarioExterno_Handler,
		},
		{
			MethodName: "CreateUsuarioExternoTeste",
			Handler:    _UsuariosExternos_CreateUsuarioExternoTeste_Handler,
		},
		{
			MethodName: "UpdateUsuarioExterno",
			Handler:    _UsuariosExternos_UpdateUsuarioExterno_Handler,
		},
		{
			MethodName: "DesativarUsuarioExterno",
			Handler:    _UsuariosExternos_DesativarUsuarioExterno_Handler,
		},
		{
			MethodName: "RestaurarUsuarioExterno",
			Handler:    _UsuariosExternos_RestaurarUsuarioExterno_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UsuariosExternos_Login_Handler,
		},
		{
			MethodName: "TokenResetSenha",
			Handler:    _UsuariosExternos_TokenResetSenha_Handler,
		},
		{
			MethodName: "ResetSenha",
			Handler:    _UsuariosExternos_ResetSenha_Handler,
		},
		{
			MethodName: "AlterarSenhaUsuario",
			Handler:    _UsuariosExternos_AlterarSenhaUsuario_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usuariosExternos.proto",
}
